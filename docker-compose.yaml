services:
  mariadb:
    image: mariadb:10.11
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mariadb-data:/var/lib/mysql
      - logs-data:/var/log/mysql
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - internal

  backend:
    build: ./flask_backend
    environment:
      DB_HOST: mariadb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      FILES_DIR: /files
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN}
      PORT: 3000
    depends_on:
      - mariadb
    # Do not expose backend directly; all access goes through apache
    networks:
      - internal
    volumes:
      - ${FILES_DIR:-./app/webroot/files}:/files:ro

  web:
    build:
      context: ./frontend
      target: serve
      # Build without injecting API URL; frontend will use same-origin
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    # Do not expose web directly; apache proxies to it
    networks:
      - internal
  
  apache:
    build: ./apache
    depends_on:
      - web
      - backend
    ports:
      - "127.0.0.1:${APACHE_PORT:-8080}:80"
    networks:
      - internal
    volumes:
      - ./apache/.htpasswd:/usr/local/apache2/conf/.htpasswd:ro
      

volumes:
  logs-data:
  mariadb-data:

networks:
  internal:
